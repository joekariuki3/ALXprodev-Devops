#!/usr/bin/bash

# Configuration constants
readonly INPUT_DIR="pokemon_data"
readonly OUTPUT_FILE="pokemon_report.csv"
readonly HEADER="Name,Height (m),Weight (kg)"

# Function to convert decimeters to meters
convert_to_meters() {
    local dm=$1
    printf "%.1f" "$(echo "$dm / 10" | bc -l)"
}

# Function to convert hectograms to kilograms
convert_to_kg() {
    local hg=$1
    printf "%.1f" "$(echo "$hg / 10" | bc -l)"
}

# Function to extract Pokemon data and create CSV
generate_csv_report() {
    echo "$HEADER" > "$OUTPUT_FILE"

    for json_file in "$INPUT_DIR"/*.json; do
        if [ -f "$json_file" ]; then
            # Extract data using
            name=$(jq -r '.name' "$JSON_FILE" | sed 's/.*/\u&/')
            height_dm=$(jq -r '.height' "$json_file")
            weight_hg=$(jq -r '.weight' "$json_file")

            # Convert measurements
            height_m=$(convert_to_meters "$height_dm")
            weight_kg=$(convert_to_kg "$weight_hg")

            # Append to CSV
            echo "$name,$height_m,$weight_kg" >> "$OUTPUT_FILE"
        fi
    done
}

# Function to calculate and display averages
calculate_averages() {
    # Skip header and calculate averages
    awk -F',' '
        NR > 1 {
            height_sum += $2
            weight_sum += $3
            count++
        }
        END {
            if (count > 0) {
                printf "Average Height: %.2f m\n", height_sum/count
                printf "Average Weight: %.2f kg\n", weight_sum/count
            }
        }
    ' "$OUTPUT_FILE"
}

# Main execution
if [ ! -d "$INPUT_DIR" ]; then
    echo "Error: Directory $INPUT_DIR not found"
    exit 1
fi

if ! command -v jq &> /dev/null; then
    echo "Error: jq is not installed. Please install it first."
    exit 1
fi

# Generate the report
generate_csv_report

echo "CSV Report generated at: $OUTPUT_FILE"
echo
echo "$HEADER"
cat "$OUTPUT_FILE" | tail -n +2
echo

# Calculate and display averages
calculate_averages